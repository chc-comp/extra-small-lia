(set-logic HORN)
(set-info :status sat)
(declare-fun itp1 (Int Int ) Bool)
(declare-fun itp2 (Int Int ) Bool)

(assert (forall ((i1 Int) (LRG1 Int)) (=> (and (= i1 0) (= LRG1 128)) (itp1 i1 LRG1))))
(assert (forall ((i0 Int) (i1 Int) (LRG1 Int))
  (=> (and (itp1 i0 LRG1) (< i0 LRG1) (= i1 (+ i0 2))) (itp1 i1 LRG1))))
(assert (forall ((LRG1 Int) (i0 Int) (LRG2 Int))
  (=> (and (itp1 i0 LRG1) (>= i0 LRG1) (= LRG2 (+ LRG1 128))) (itp2 i0 LRG2))))
(assert (forall ((i0 Int) (i1 Int) (LRG1 Int))
  (=> (and (itp2 i0 LRG1) (< i0 LRG1) (= i1 (+ i0 2))) (itp2 i1 LRG1))))
(assert (forall ((i1 Int) (LRG1 Int))
  (=> (and (itp2 i1 LRG1) (>= i1 LRG1) (not (= i1 LRG1))) false)))
(check-sat)
