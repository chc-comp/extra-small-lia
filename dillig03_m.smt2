(set-logic HORN)
(set-info :status sat)
(declare-fun inv (Int Int ) Bool)
(declare-fun itp (Int Int ) Bool)

(assert (forall ((x1 Int) (x3 Int)) (=> (and (= x1 1) (= x3 1)) (inv x1 x3))))
(assert (forall ((x1 Int) (x2 Int) (x3 Int))
  (=> (and (inv x1 x3) (= x2 (+ x1 1))) (itp x2 x3))))
(assert (forall ((x1 Int) (x3 Int) (x2 Int) (x4 Int))
  (let ((a!1 (and (itp x1 x3) (or (= x2 x1) (= x2 (+ x1 1))) (= x4 (+ x3 x2)))))
    (=> a!1 (itp x2 x4)))))
(assert (forall ((x1 Int) (x3 Int)) (=> (itp x1 x3) (inv x1 x3))))
(assert (forall ((x1 Int) (x3 Int)) (=> (and (inv x1 x3) (not (>= x3 1))) false)))
(check-sat)
