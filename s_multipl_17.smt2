(set-logic HORN)
(set-info :status sat)
(declare-fun LOOPX (Int ) Bool)
(declare-fun LOOPY (Int Int ) Bool)

(assert (forall ((x Int)) (=> (= x 3138) (LOOPX x))))
(assert (forall ((x Int) (x1 Int) (y1 Int))
  (=> (and (LOOPX x) (= y1 0) (= x1 x)) (LOOPY x1 y1))))
(assert (forall ((y Int) (x Int) (x1 Int) (y1 Int))
  (let ((a!1 (not (and (= (mod y 3) 0) (> y 0)))))
    (=> (and (LOOPY x y) a!1 (= y1 (+ y 2)) (= x1 x)) (LOOPY x1 y1)))))
(assert (forall ((x Int) (y Int) (x1 Int))
  (=> (and (LOOPY x y) (= (mod y 3) 0) (> y 0) (= x1 (+ x y))) (LOOPX x1))))
(assert (forall ((x Int))
  (let ((a!1 (and (LOOPX x) (not (= (mod x 6) 0)))))
    (=> a!1 false))))
(check-sat)
